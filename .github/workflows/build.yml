name: Kadas Build
on: [push]

jobs:
  build:
    name: MinGW build
    runs-on: ubuntu-latest
    container:
      image: fedora:rawhide
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v1

      - name: Update system
        run: dnf -y update

      - name: Install core dependencies
        run: dnf -y install jq wget unzip

      - name: Version number
        id: version_number
        run: |
          if [ ${{ startsWith(github.ref, 'refs/tags/') }} = true ]; then
            VERSION=$(basename ${{ github.ref }})
          else
            VERSION=ci-latest-$(basename ${{ github.ref }})
            PREV_RELEASE=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/$VERSION | jq -r .url)
          fi
          echo "##[set-output name=version;]$VERSION"
          echo "##[set-output name=prev_release;]${PREV_RELEASE/null/}"

      - name: Download QGIS build
        run: |
          asset_url=$(curl -s https://api.github.com/repos/kadas-albireo/QGIS/actions/artifacts | jq -r '[.artifacts[] | select(.name == "QGIS for Windows 64bit")][0].archive_download_url')
          asset_debug_url=$(curl -s https://api.github.com/repos/kadas-albireo/QGIS/actions/artifacts | jq -r '[.artifacts[] | select(.name == "QGIS for Windows 64bit Debug Symbols")][0].archive_download_url')
          curl -L -u ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} -o qgis-portable-win64_zip.zip ${asset_url}
          curl -L -u ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} -o qgis-portable-win64-debugsym_zip.zip ${asset_debug_url}
          unzip qgis-portable-win64_zip.zip
          unzip qgis-portable-win64-debugsym_zip.zip
          unzip qgis-portable-win64.zip
          unzip qgis-portable-win64-debugsym.zip
          mv QGIS-Portable dist

      - name: Install build dependencies
        run: ./scripts/mingwdeps.sh

      - name: Build application
        run: QGIS_INSTALL_PREFIX=$PWD/dist ./scripts/mingwbuild.sh x86_64 nodebug 4

      - name: Package application
        run: ./packaging/kadas_release.sh

      - name: Create portable zip
        run: mv kadas k && mv dist kadas && zip -r kadas-portable-win64.zip kadas

      - name: Create debugsym zip
        run: (cd dist_debug && zip -r - *) > kadas-portable-win64-debugsym.zip

      - name: Reset ci-latest tag
        run: |
          VERSION=${{ steps.version_number.outputs.version }}
          git config --global user.email "ci@github.com"
          git config --global user.name "Github CI"
          # Workaround for "could not read Username for 'https://github.com': No such device or address"
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
          git tag -d $VERSION || true
          git push origin :$VERSION || true
          git tag -m $VERSION $VERSION
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(steps.version_number.outputs.version, 'ci-latest-')

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_number.outputs.version }}
          release_name: CI Build
          draft: false
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kadas-portable-win64.zip
          asset_name: kadas-portable-win64.zip
          asset_content_type: application/zip

      - name: Upload debugsym release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kadas-portable-win64-debugsym.zip
          asset_name: kadas-portable-win64-debugsym.zip
          asset_content_type: application/zip

      - name: Delete previous release
        run: |
          curl -s -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -X DELETE ${{ steps.version_number.outputs.prev_release }}
        if: steps.version_number.outputs.prev_release != ''
